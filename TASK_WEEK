# 系统存储管理周计划生成任务指令

## 任务目标
你是一位资深的系统存储工程师和技术专家。请根据 `PLAN.md` 中的整体规划，为指定的第 {$week} 周生成一份完整详尽的周学习计划。

## 生成要求

### 1. 周计划结构模板
请严格按照以下结构组织周计划内容：

```markdown
# 第 {$week} 周：[核心技术主题]

## 整体目标
- [技能目标1：具体可衡量的技术能力]
- [技能目标2：实践操作能力]
- [技能目标3：Go编程集成能力]
- [技能目标4：企业级应用理解]
- [技能目标5：监控运维能力]
- [目标6：为后续学习做准备的基础能力]

---

## Day 1: [具体主题]
### 🎯 学习目标
- [明确的当日技能目标]
- [具体的成果产出]

### 📚 理论学习（上午 X 小时）
1. **[核心概念1]**
   - [深度技术解析]
   - [原理机制说明]
   - [架构设计要点]

2. **[核心概念2]**
   - [企业级应用场景]
   - [最佳实践总结]

### 🛠️ 实践操作（下午 X 小时）
1. **[实践项目1]**
   - [详细操作步骤]
   - [预期结果验证]

2. **[实践项目2]**
   - [配置和管理要点]
   - [故障排查练习]

### 📝 实践练习
- [具体练习任务1]
- [具体练习任务2]

### 🏠 作业
- [扩展学习任务]
- [技能巩固要求]

---

[重复 Day 2-5 的相同结构]

---

## 📊 学习效果评估

### 技能检查清单
- [ ] [具体技能验证点1]
- [ ] [具体技能验证点2]
- [ ] [Go编程能力验证]
- [ ] [故障排查能力验证]

### 实战项目评估
- [ ] [项目完整性评估]
- [ ] [代码质量评估]
- [ ] [文档完整性评估]

---

## 🔗 参考资源
1. **官方文档**
   - [相关技术官方文档链接]

2. **Go 开发参考**
   - [Go相关资源]

3. **工具和测试**
   - [性能测试工具]
```

### 2. 内容质量要求

#### A. 技术深度标准
- **理论基础**：深入解释核心概念、工作原理、架构设计
- **实践操作**：提供完整的命令示例、配置步骤、验证方法
- **Go编程集成**：每周必须包含Go语言实现相关功能
- **企业级视角**：体现生产环境的复杂性和专业要求
- **监控运维**：建立监控体系，培养运维思维

#### B. 学习进度控制
- **时间分配合理**：理论学习与实践操作时间比例适当
- **难度递进**：从基础操作到高级应用逐步深入
- **技能积累**：每天的学习成果为后续学习奠定基础
- **综合应用**：周末包含综合实战项目

#### C. 实用性要求
- **操作可执行**：所有命令和配置都能在实际环境中执行
- **问题导向**：围绕实际工作中遇到的问题设计学习内容
- **成果可见**：每天都有明确的学习成果和技能提升
- **企业应用**：结合企业级需求和最佳实践

### 3. Go编程集成要求
- **渐进式开发**：从简单的系统调用到复杂的管理工具
- **企业级规范**：代码结构、错误处理、日志记录、测试覆盖
- **实用工具导向**：开发实际可用的存储管理和监控工具
- **系统集成**：展示Go程序与存储系统的深度集成

### 4. 特殊要求说明

#### A. 基于PLAN.md内容
- 严格按照PLAN.md中第{$week}周的任务清单执行
- 整合CTO建议的改进点和企业级要求
- 体现技术栈的完整性和系统性

#### B. 企业级考虑
- **成本效益**：分析技术方案的成本和收益
- **风险管控**：识别潜在风险并提供应对策略
- **团队协作**：考虑知识传承和团队培训
- **标准化**：建立操作规范和最佳实践

#### C. 前瞻性设计
- **技术趋势**：结合云原生、边缘计算等发展方向
- **扩展能力**：为后续周的学习内容做好准备
- **职业发展**：体现存储工程师的职业成长路径

### 5. 输出质量标准
- **完整性**：涵盖理论、实践、编程、运维的完整学习体系
- **实用性**：所有内容都具有实际应用价值
- **可操作性**：学习者能够独立完成所有任务
- **专业性**：体现存储系统工程师的专业素养
- **系统性**：建立系统化的知识体系和技能框架

## 变量说明
- `{$week}`: 周次编号 (1-6)，对应PLAN.md中的具体周计划

## 成果期望
生成的周计划应该：
1. 完全对应PLAN.md中指定周的学习目标和任务
2. 提供详细可执行的daily breakdown
3. 确保理论学习与实践操作的平衡
4. 体现Go编程能力的持续提升
5. 建立企业级的技术视野和运维思维
6. 为学习者提供清晰的学习路径和评估标准

请基于week1.md的结构和质量标准，为第{$week}周生成同等质量的详细学习计划！