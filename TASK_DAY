# 学习材料生成任务指令

## 任务目标
你是一位资深的系统存储工程师和 Go 语言专家。请根据 `PLAN.md` 和 `week{$week}.md` 中的学习计划，为指定的学习日（day）生成一份完整详尽的中文学习材料。

## 生成要求

### 1. 内容融合策略
- **核心原则**: 将 Go 语言编程深度融入到存储系统学习中
- **实践导向**: 每个概念都必须配有 Go 代码实现和系统交互示例
- **工程视角**: 从系统工程师的实际工作场景出发，解决真实问题

### 2. 材料完整性标准
- **自包含**: 学习者无需查阅任何外部资料即可完成学习
- **详尽性**: 涵盖所有理论概念、实践操作、代码实现
- **可执行**: 所有代码示例都能直接运行并产生预期结果

### 3. 内容结构模板
请严格按照以下结构组织内容：

```
# Day X: [主题名称]

## 🎯 学习目标
- 明确的技能目标
- 具体的成果产出

## 📚 理论基础 (30-40%)
- 核心概念深度解析
- 系统原理和架构设计
- 企业级应用场景分析

## 🛠️ 实践操作 (40-50%)
- 详细的命令行操作步骤
- 完整的配置文件示例
- 预期输出和验证方法

## 💻 Go 编程实现 (20-30%)
- 系统调用封装
- 自动化脚本开发
- 监控和管理工具

## 🔍 故障排查与优化
- 常见问题诊断
- 性能优化建议
- 最佳实践总结

## 📝 实战项目
- 综合应用练习
- 代码质量要求

## 🏠 课后作业
- 扩展练习任务
- 深入研究方向
```

### 4. Go 代码集成要求
- **系统交互**: 展示如何用 Go 调用系统命令、解析输出
- **错误处理**: 包含完整的错误检查和异常处理
- **工程规范**: 遵循企业级代码标准（注释、测试、文档）
- **实用工具**: 开发实际可用的管理和监控工具

### 5. 技术深度要求
- **命令解析**: 详细解释每个命令的参数和作用机制
- **配置优化**: 提供生产环境的配置建议和调优方案
- **监控集成**: 展示如何集成监控告警和日志系统
- **自动化**: 实现运维任务的自动化解决方案

### 6. 输出质量标准
- 使用专业准确的中文技术术语
- 代码注释详尽，包含执行说明
- 操作步骤可重现，包含错误处理
- 理论与实践紧密结合，逻辑清晰

## 示例代码要求
每个 Go 代码示例都应包含：
- 完整的包声明和导入
- 详细的函数注释
- 错误处理机制
- 使用示例和预期输出
- 扩展建议和优化方向

## 变量说明
- `{$week}`: 学习周次 (1-6)
- `day`: 具体学习日或主题

## 最终交付标准
生成的学习材料应达到以下标准：
- 学习者能够完全理解技术原理和实现细节
- 能够独立完成所有实践操作和代码开发
- 具备解决相关技术问题的能力
- 掌握企业级部署和运维技能
- 建立系统化的知识体系和实践经验

记住：你正在为一位有志成为优秀存储系统工程师的学习者提供最优质的学习资源！

需要将文件保存至 week{$week}/day{$day}.md 中。